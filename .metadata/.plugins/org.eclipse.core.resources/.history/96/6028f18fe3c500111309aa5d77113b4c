package com.pattern;

import java.util.Vector;

import processing.core.PApplet;

import com.datatype.Point;
import com.primitive2d.Drawable;
import com.primitive2d.Ellipse;
import com.primitive2d.Line;
import com.primitive2d.Polygon;

//base class for all patterns
public class Pattern implements Drawable {
	protected Vector<Line> lines;
	protected Vector<Point> points; 
	protected Vector<Polygon> polygons;
	protected Vector<Ellipse> ellipses;
	
	public Pattern(){
		this.lines = new Vector<Line>();
		this.points = new Vector<Point>(); 
		this.polygons = new Vector<Polygon>();
		this.ellipses = new Vector<Ellipse>();
	}
	
	
	//add in access method for lines
	
	public void addLine(double startX, double startY, double endX, double endY) {
		Line line = new Line(startX,startY,endX,endY);
		lines.add(line);
	}
	//adds a line in polar mode by specifying an origin, radius and angle
	public void addLine(double startX, double startY, float radius, float theta) {
		Line line = new Line(startX,startY,radius, theta);
		lines.add(line);
	}
	
	//adds a line by passing in a line
	public void addLine(Line line) {
		lines.add(line);
	}
	
	public Vector<Line> getAllLines(){
		return this.lines;
	}

	public void setAllLines(Vector<Line> newLines){
		this.lines = newLines ;
	}

	public Line getLineAt(int index){
		return this.lines.get(index);
	}
	
	//implement  get and set methods for all primitive vectors

	public void draw(PApplet parent, float strokeWeight){
		for(int i=0;i<lines.size();i++){
    		lines.get(i).draw(parent, strokeWeight);
    		
    		
    	}
		for(int i=0;i<ellipses.size();i++){
    		//ellipses.get(i).draw(parent, strokeWeight);
    		
    		
    	}
		
		for(int i=0;i<points.size();i++){
    		//points.get(i).draw(parent, strokeWeight);
    		
    		
    	}
		
		for(int i=0;i<polygons.size();i++){
    		polygons.get(i).draw(parent, strokeWeight);
    		
    		
    	}
	}
	
	public void print(PApplet parent, float strokeWeight, String filename){
		//TODO:implement print method
	}


}
